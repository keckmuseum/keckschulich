version: '3'

services:
   db:
     image: mysql:5.7
     volumes:
       - ./docker/conf/db_data:/var/lib/mysql
       - ./docker/conf/mysql:/etc/mysql
#     ports:
#       - "3306:3308" # Optional
     restart: always
     environment:
       #MYSQL_RANDOM_ROOT_PASSWORD: true
       MYSQL_ROOT_PASSWORD: sampleRootPass #!Change these
       MYSQL_DATABASE: sampleDbName #!Change these
       MYSQL_USER: sampleDbUser #!Change these
       MYSQL_PASSWORD: sampleDbPass #!Change these
   php:
     depends_on:
       - db
     links:
       - db
     build: ./docker/dockerfiles/php
     volumes:
       - ./docker/conf/php-fpm:/usr/local/etc/php-fpm.d
       - ./public:/var/www/html/public #! Modifying this has reprocussions: the wordpress code location, the init script command and init script itself, and nginx vhost
       - ./secrets:/var/www/html/secrets
       - ./scripts:/var/www/html/scripts
     restart: always
     environment:
       WORDPRESS_ENV: development # OR production, stage, release
       WORDPRESS_PROTOCOL: https # OR http
       WORDPRESS_DOMAIN: www.example.com #!Change these
       WORDPRESS_CONTENT_DIR: content # Under /public
       WORDPRESS_CORE_DIR: x # Under /public
       #WORDPRESS_VERSION: $WORDPRESS_VERSION # Uses latest if not set. Set this env variable on host before running docker-compose $WORDPRESS_VERSION=4.8 && docker-compose up -d.
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_NAME: sampleDbName #!Change these
       WORDPRESS_DB_USER: sampleDbUser #!Change these
       WORDPRESS_DB_PASSWORD: sampleDbPass #!Change these
       #WORDPRESS_IMPORT_DB: $WORDPRESS_IMPORT_DB # THIS WILL WIPE YOUR CURRENT DB. Set this env variable on host before running docker-compose $WORDPRESS_IMPORT_DB='db/db.sql' && docker-compose up -d.
   nginx:
     depends_on:
       - db
       - php
       - wordpressinit
     links:
       - php
     image: revoltmedia/ubuntu
     volumes:
       - ./docker/conf/nginx:/etc/nginx
       - ./public:/var/www/html/public #! Modifying this has reprocussions: the wordpress code location, the init script command and init script itself, and nginx vhost
       - ./secrets:/var/www/html/secrets
       - ./scripts:/var/www/html/scripts
     ports:
       - "8888:80"
     restart: always
     environment:
       WORDPRESS_ENV: development # OR production, stage, release
       WORDPRESS_PROTOCOL: https # OR http
       WORDPRESS_DOMAIN: www.example.com #!Change these
       WORDPRESS_CONTENT_DIR: content # Under /public
       WORDPRESS_CORE_DIR: x # Under /public
       #WORDPRESS_VERSION: $WORDPRESS_VERSION # Uses latest if not set. Set this env variable on host before running docker-compose $WORDPRESS_VERSION=4.8 && docker-compose up -d.
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_NAME: sampleDbName #!Change these
       WORDPRESS_DB_USER: sampleDbUser #!Change these
       WORDPRESS_DB_PASSWORD: sampleDbPass #!Change these
       #WORDPRESS_IMPORT_DB: $WORDPRESS_IMPORT_DB # THIS WILL WIPE YOUR CURRENT DB. Set this env variable on host before running docker-compose $WORDPRESS_IMPORT_DB='db/db.sql' && docker-compose up -d.
   wordpressinit:
     depends_on:
       - db
       - php
     image: revoltmedia/ubuntu
     volumes:
       - ./docker/conf/nginx:/etc/nginx
       - ./public:/var/www/html/public #! Modifying this has reprocussions: the wordpress code location, the init script command and init script itself, and nginx vhost
       - ./secrets:/var/www/html/secrets
       - ./scripts:/var/www/html/scripts
     environment:
       WORDPRESS_ENV: development # OR production, stage, release
       WORDPRESS_PROTOCOL: https # OR http
       WORDPRESS_DOMAIN: www.example.com #!Change these
       WORDPRESS_CONTENT_DIR: content # Under /public
       WORDPRESS_CORE_DIR: x # Under /public
       #WORDPRESS_VERSION: $WORDPRESS_VERSION # Uses latest if not set. Set this env variable on host before running docker-compose $WORDPRESS_VERSION=4.8 && docker-compose up -d.
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_NAME: sampleDbName #!Change these
       WORDPRESS_DB_USER: sampleDbUser #!Change these
       WORDPRESS_DB_PASSWORD: sampleDbPass #!Change these
       #WORDPRESS_IMPORT_DB: $WORDPRESS_IMPORT_DB # THIS WILL WIPE YOUR CURRENT DB. Set this env variable on host before running docker-compose $WORDPRESS_IMPORT_DB='db/db.sql' && docker-compose up -d.
       #CRON_JOBS: '1 4 * * 0 cerbot renew --nginx >> /tmp/cron-certbot-renew.log; */15 * * * * sh /var/www/html/scripts/backup-db.sh "/var/www/html/db" exampleSite'  # Cron job to add Sample is for certbot Sundays at 04:01
     command: bash -c "bash /var/www/html/scripts/init.sh"

volumes:
    db_data:
